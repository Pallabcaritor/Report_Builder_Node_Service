module.exports = Object.freeze({
    SEASON_QUERY: "Select Id,Name from t_season where status=1 order by Id ASC",
    ORDER_WINDOW_QUERY: "select id,name from t_order_window where status=1 order by id ASC",
    ORDER_WINDOW_IN_QUERY: `select id,name from t_order_window where status=1 and season_id in ({seasonValue}) order by id ASC`,
    ORDER_WINDOW_LABEL_QUERY1: "select distinct order_window_label from t_order_window where status=1",
    ORDER_WINDOW_LABEL_QUERY2: `select distinct order_window_label from t_order_window where status=1 and season_id in ({seasonValue}) and id in ({owindowValue})`,
    ORDER_WINDOW_LABEL_QUERY3: `select distinct order_window_label from t_order_window where status=1 and season_id in ({seasonValue})`,
    ORDER_WINDOW_LABEL_QUERY4: `select distinct order_window_label from t_order_window where status=1 and id in ({owindowValue})`,
    FILTER2_CUSTOMER: `SELECT distinct tf.franchise_name FROM t_franchise tf, t_order tod,t_order_window tow  where tf.id = tod.franchise_id  and tow.id=tod.order_window_id and ((tod.order_window_id in ({orderwindowValue})) or (tod.id in ({orderwindowValue})) or (tod.season_id in ({seasonValue})) or (tow.order_window_label in ({windowlabelValue}))) ORDER BY tf.franchise_name`,
    FILTER2_CUSTOMER_STORE: `SELECT distinct c.store_name as store FROM public.t_order a, t_order_window b , t_franchise_store c where b.id = a.order_window_id and c.id=a.store_id and ((a.order_window_id in ({orderwindowValue})) or (b.id in ({orderwindowValue})) or (b.season_id in ({seasonValue})) or (b.order_window_label in ({windowlabelValue}))) ORDER BY c.store_name`,
    FILTER2_CUSTOMER_STORE2: `SELECT distinct b.store_name as store FROM public.t_order a, t_franchise_store b where b.franchise_id = a.franchise_id and a.season_id in ({seasonValue}) ORDER BY b.store_name`,
    FILTER2_CUSTOMER_STORE3: `SELECT distinct c.store_name as store FROM public.t_order a, t_order_window b , t_franchise_store c where b.id = a.order_window_id and c.id=a.store_id and ((a.order_window_id in ({orderwindowValue})) or (b.id in ({orderwindowValue})) or (b.season_id in ({seasonValue}))) ORDER BY c.store_name`,
    FILTER2_SUBSIDIARY : `select distinct name from m_subsidiaries order by name`,
    FILTER2_CUSTOMER2 : `SELECT distinct tf.franchise_name FROM t_franchise tf, t_order tod,t_order_window tow  where tf.id = tod.franchise_id  and tow.id=tod.order_window_id and ((tod.order_window_id in ({orderwindowValue}))or (tod.id in ({orderwindowValue})) or (tod.season_id in ({seasonValue}))) ORDER BY tf.franchise_name`,
    FILTER2_GEN : `SELECT distinct a.{attributeValue} FROM public.t_footware_map_items a, t_order_window b where b.id = a.order_window_id and ((a.order_window_id in ({orderwindowValue})) or (b.id in ({orderwindowValue})) or (b.season_id in ({seasonValue})) or (b.order_window_label in ({windowlabelValue}))) ORDER BY a.{attributeValue}`,
    FILTER2_GEN2: `SELECT distinct a.{attributeValue} FROM public.t_footware_map_items a, t_order_window b where b.id = a.order_window_id and b.season_id in ({seasonValue}) ORDER BY a.{attributeValue}`,
    FILTER2_GEN3: `SELECT distinct a.{attributeValue} FROM public.t_footware_map_items a, t_order_window b where b.id = a.order_window_id and ((a.order_window_id in ({orderwindowValue})) or (b.id in ({orderwindowValue})) or (b.season_id in ({seasonValue}))) ORDER BY a.{attributeValue}`,
    ORDER_WINDOW_QUERY_BY_WL: `select id,name from t_order_window where order_window_label in ({windowlabelValue}) and status=1 order by id ASC`,
    BASE_QUERY1: "select mc.name country_name, tf.franchise_name customer_name, ts.name as season_name, tow.name as order_window_name, tfs.store_name, ms.name subsidary_name, brand, product_category, global_distribution_tier, regional_distribution_tier, sale_season, category1, item_Code, item_name, gender, tfmi.remarks, launch_month, sum(quantity) AS qty, sum(sgd_value_total::numeric) sgd_val, sum(usd_value_total::numeric) usd_val from t_order o left join (select t_footware_map_items.*,getArticleid(season_id,item_Code) as art_id from t_footware_map_items) tfmi on o.season_id=tfmi.season_id and o.order_window_id=tfmi.order_window_id left join t_order_window tow on tow.id=o.order_window_id left join t_franchise tf on tf.id=o.franchise_id left join t_franchise_store tfs on tfs.id=o.store_id left join m_country mc on mc.id=tf.country_id left join m_subsidiaries ms on ms.id=tf.subsidiary_id left join t_order_article toa on toa.order_id=o.id and tfmi.art_id=toa.article_id left join t_season ts on o.season_id = ts.id where order_status=4",
    GROUP_BY1: "and toa.status=1 and tfmi.type=1 group by mc.name,tf.franchise_name,ts.name,tow.name,tfs.store_name,ms.name,brand,product_category,global_distribution_tier,regional_distribution_tier,sale_season, category1,item_Code,item_name,gender,tfmi.remarks,launch_month having sum(sgd_value_total::numeric)>0 union all",
    BASE_QUERY2: "select mc.name country_name,tf.franchise_name customer_name,ts.name as season_name,tow.name as order_window_name, tfs.store_name,ms.name subsidary_name,brand,product_group product_category,distribution_tier,regional_distribution_tier,sale_season, category1,item_Code,item_name,gender,tfmi.remarks,launch_month,sum(quantity) as qty,sum(sgd_value_total::numeric) sgd_val,sum(usd_value_total::numeric) usd_val from t_order o left join (select t_apparel_map_items.*,getArticleid(season_id,item_Code) as art_id from t_apparel_map_items) tfmi on o.season_id=tfmi.season_id and o.order_window_id=tfmi.order_window_id left join t_order_window tow on tow.id=o.order_window_id and tow.id=tfmi.order_window_id left join t_franchise tf on tf.id=o.franchise_id left join t_franchise_store tfs on tfs.id=o.store_id left join m_country mc on mc.id=tf.country_id left join m_subsidiaries ms on ms.id=tf.subsidiary_id left join t_order_article toa on toa.order_id=o.id and tfmi.art_id=toa.article_id left join t_season ts on o.season_id = ts.id where order_status=4",
    GROUP_BY2: "group by mc.name,tf.franchise_name,tfs.store_name,ms.name,brand,product_group,distribution_tier,regional_distribution_tier,sale_season, category1,item_Code,item_name,gender,tfmi.remarks,launch_month,ts.name, tow.name having sum(sgd_value_total::numeric)>0"
});